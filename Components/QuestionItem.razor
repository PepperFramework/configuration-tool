@using Blazored.LocalStorage
@using ConfigurationTool.Model
@using ConfigurationTool.Utils
@inject IDialogService DialogService
@inject ILocalStorageService Localstorage
@inject NavigationManager Navigation

<MudPaper Style="margin-top: 2em; padding: 5px">
    <MudText>Question: @Question.Text</MudText>
    @foreach (var answer in Question.Answers)
    {
        <MudText>Answer: @answer.Text</MudText>
    }
    <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
        See Details
    </MudButton>
</MudPaper>


@code {
    [Parameter] public Question Question { get; set; } = new();
    
    private async Task OpenDialog()
    {
        var parameters = new DialogParameters { ["Question"] = Question };

        var dialog = DialogService.Show<QuestionDetailDialog>(Question.Text, parameters);
        
        if (!(await dialog.Result).Cancelled)
        {
            var token = await Localstorage.GetItemAsync<string>("token");

            if (token == null)
            {
                await Localstorage.RemoveItemAsync("token");
                Navigation.NavigateTo("/login");
                return;
            }
            
            await HttpUtils.Get<Question>($"question/{Question.Id}", token);
        }
    }
}