@page "/login"
@using ConfigurationTool.Model
@using ConfigurationTool.Utils
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService Localstorage;
@inject NavigationManager Navigation;
@inject IStringLocalizer<ApplicationResource> _localizer

<PageTitle>Login</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Login</MudText>
<MudGrid>
    <MudItem xs="12" sm="7" gap-y-4>
        <AuthorizeView>
            <Authorized>
                <MudPaper Class="pa-4">
                    <MudForm @bind-IsValid="@_success" @ref="_form">
                        <h2>Are you sure you want to log out?</h2>
                        <div style="margin-top: 1em">
                            <MudButton Variant="Variant.Filled" Color="Color.Info" Class="ml-auto" OnClick='() => Navigation.NavigateTo("/")'>Cancel</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@LogOut">Logout</MudButton>
                        </div>
                    </MudForm>
                </MudPaper>
            </Authorized>
            <NotAuthorized>
                <MudPaper Class="pa-4">
                    <MudForm @bind-IsValid="@_success" @ref="_form">
                        <MudTextField T="string" Label="Email" Required="true" @ref="_id" RequiredError="Email is required!"/>
                        <MudTextField T="string" Label="Password" Required="true" @ref="_pw" RequiredError="Password is required!"/>
                        <div class="d-flex align-center justify-space-between">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" Class="ml-auto" OnClick="HandleLogin">Login</MudButton>
                        </div>
                    </MudForm>
                </MudPaper>
            </NotAuthorized>
        </AuthorizeView>
        <MudPaper Class="pa-4">
            <MudForm @bind-IsValid="@_success" @ref="_form">
                <MudTextField T="string" Label="Email" Required="true" @ref="_id" RequiredError=@_localizer["EmailRequired"]/>
                <MudTextField T="string" Label=@_localizer["Password"] Required="true" @ref="_pw" RequiredError=@_localizer["PasswordRequired"]/>
                <div class="d-flex align-center justify-space-between">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" Class="ml-auto" OnClick="HandleLogin">Login</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool _success;
    MudForm _form;
    MudTextField<string> _pw;
    MudTextField<string> _id;

    public void LogOut()
    {
        Localstorage.RemoveItemAsync("token");
        Navigation.NavigateTo("/login", true);
    }

    async Task HandleLogin()
    {
        var user = new UserLoginDto
        {
            UserIdentificator = _id.Value,
            Password = _pw.Value
        };

        var token = await HttpUtils.Post<string>("authentication", user);

        if (string.IsNullOrEmpty(token))
        {
            _success = false;
            StateHasChanged();
            return;
        }

        await Localstorage.SetItemAsync("token", token);
        await Localstorage.SetItemAsync("email", user.UserIdentificator);
        await AuthStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/");
    }
}