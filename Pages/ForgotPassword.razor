@page "/forgot-password"
@using ConfigurationTool.Utils
@using Blazored.LocalStorage
@inject IStringLocalizer<ApplicationResource> Localizer
@inject NavigationManager Navigation

<PageTitle>Forgot Password</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Forgot Password</MudText>
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @bind-IsValid="@_success" @ref="_form">
                <MudTextField T="string" Label="Email" Required="true" @bind-Value="_email" RequiredError=@Localizer["EmailRequired"]/>
                <div class="d-flex align-center justify-space-between mt-4">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" Class="ml-auto" OnClick="@HandleResetPassword">Reset Password</MudButton>
                </div>
                @if (_resetSuccessful)
                {
                    <MudText Typo="Typo.h6" GutterBottom="true" Color="Color.Success">Check your email for password reset instructions.</MudText>
                }
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool _success;
    MudForm? _form;
    string? _email;
    bool _resetSuccessful = false;

    async Task HandleResetPassword()
    {

        var response = await HttpUtils.Post<string>("change-password", _email);

        if (string.IsNullOrEmpty(response))
        {
            _success = false;
            StateHasChanged();
            return;
        }

        _resetSuccessful = true;
    }
}