<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Greating" xml:space="preserve">
    <value>Hello Welcome to Rezep</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="QuestionsManagement" xml:space="preserve">
    <value>Question Management</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="WelcomeMessageText" xml:space="preserve">
    <value>Welcome to Rezep. In on this website you can change your Rezep-Settings or manage your questions.</value>
  </data>
  <data name="PepperSettings" xml:space="preserve">
    <value>Pepper settings</value>
  </data>
  <data name="ErrorTextQuestion" xml:space="preserve">
    <value>Please enter a question with a minimum of 10 characters</value>
  </data>
  <data name="ErrorTextAnswer" xml:space="preserve">
    <value>Please enter a answer with a minimum of 10 characters</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="ErrorTextInputQuestionManagment" xml:space="preserve">
    <value>Place enter at least 10 characters</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Choose a language</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="NotAuthorized" xml:space="preserve">
    <value>Sorry, you're not authorized to access this page.</value>
  </data>
  <data name="LoginButton" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="AddNewMembers" xml:space="preserve">
    <value>Here you can add new members. Please enter the mail address of the person you want to add. They will get a mail and log in.</value>
  </data>
  <data name="RegisterUser" xml:space="preserve">
    <value>Register User</value>
  </data>
  <data name="AdminPage" xml:space="preserve">
    <value>Admin Page</value>
  </data>
  <data name="AlreadyLoggedIn" xml:space="preserve">
    <value>You are already, logged in!</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required!</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="NameRequiredErrorMessage" xml:space="preserve">
    <value>Your first name is required!</value>
  </data>
    <data name="LastNameRequiredErrorMessage" xml:space="preserve">
        <value>Your last name is required!</value>
    </data>
    <data name="EmailRequiredErrorMessage" xml:space="preserve">
        <value>Your email is required!</value>
    </data>
    <data name="PasswordRequiredErrorMessage" xml:space="preserve">
        <value>Your password is required!</value>
    </data>
    <data name="PasswordConfirmRequiredErrorMessage" xml:space="preserve">
        <value>Please confirm your password!</value>
    </data>
    <data name="PasswordConfirmErrorMessage" xml:space="preserve">
        <value>Your passwords do not match!</value>
    </data>
  //Add First Name
    <data name="FirstName" xml:space="preserve">
        <value>First Name</value>
    </data>
    //Add Last Name
    <data name="LastName" xml:space="preserve">
        <value>Last Name</value>
    </data>
   //Add Password
  //Add Choose a strong password!
    <data name="PasswordStrength" xml:space="preserve">
        <value>Choose a strong password!</value>
    </data>
  //Add Password is required!
    <data name="PasswordRequired" xml:space="preserve">
        <value>Password is required!</value>
    </data>
  //Add Repeat the password!
    <data name="RepeatPassword" xml:space="preserve">
        <value>Repeat the password!</value>
    </data>
  //Add You must agree to your TOS!
    <data name="AgreeToTOS" xml:space="preserve">
        <value>You must agree to your TOS!</value>
    </data>
  //Add I agree to the TOS!
    <data name="IAgreeToTOS" xml:space="preserve">
        <value>I agree to the TOS!</value>
    </data>
  //Add Register
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  //Add Password must be at least of length 8"
  <data name="PasswordLength" xml:space="preserve">
    <value>Password must be at least of length 8!</value>
  </data>
    //Add Password must contain at least one capital letter
  <data name="PasswordCapitalLetter" xml:space="preserve">
    <value>Password must contain at least one capital letter!</value>
  </data>
  //Add Password must contain at least one lowercase letter
  <data name="PasswordLowercaseLetter" xml:space="preserve">
    <value>Password must contain at least one lowercase letter!</value>
  </data>
  //Add Password must contain at least one digit
    <data name="PasswordDigit" xml:space="preserve">
        <value>Password must contain at least one digit</value>
    </data>
  //Passwords don't match
  <data name="PasswordMatch" xml:space="preserve">
    <value>Passwords don't match!</value>
  </data>
  //NOT IMPLEMENTED! (yet)
    <data name="NotImplemented" xml:space="preserve">
        <value>NOT IMPLEMENTED! (yet)</value>
    </data>
  
  
  
  
  
  
</root>